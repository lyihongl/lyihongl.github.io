{"version":3,"sources":["assets/reduced-volume.svg","BodyText.tsx","assets/name.mp3","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BodyText","className","children","App","audio","Audio","name","useEffect","load","onClick","play","console","log","src","VolumeLogo","href","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0KAAe,G,UAAA,IAA0B,4C,OCa1BA,EAJmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,SAAd,OAChC,qBAAKD,UAAS,oBAAeA,GAA7B,SAA2CC,KCV9B,MAA0B,iCCgE1BC,MAzDf,WACE,IAAIC,EAAQ,IAAIC,MAAMC,GAQtB,OAPAC,qBAAU,WACRH,EAAMI,UAON,sBAAKP,UAAU,YAAf,UACE,qBAAKA,UAAU,4BAAf,mBACA,sBAAKA,UAAU,cAAf,kCAEE,wBAAQA,UAAU,gBAAgBQ,QAT1B,WACZL,EAAMM,OACNC,QAAQC,IAAIR,IAOR,SACE,qBAAKS,IAAKC,EAAYb,UAAU,qBAGpC,cAAC,EAAD,8GAIA,cAAC,EAAD,wCACA,+BACE,6EACA,oFACA,2EACA,6EAEF,cAAC,EAAD,8FAIA,cAAC,EAAD,0DACA,+BACE,+BACE,mBACEc,KAAK,iDACLC,OAAO,SAFT,qBADF,wIAUA,+BACE,mBAAGD,KAAK,GAAGC,OAAO,SAAlB,oBADF,mHCtCOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f6ecb437.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/reduced-volume.6a4aed2a.svg\";","import React from \"react\";\nimport \"./App.css\";\n\n//function BodyText(children: string, className?: string) {\n//return <div className={`body-text ${className}`}>{children}</div>;\n//}\ntype Props = {\n  className?: string;\n};\nconst BodyText: React.FC<Props> = ({ className, children }) => (\n  <div className={`body-text ${className}`}>{children}</div>\n);\n\nexport default BodyText;\n","export default __webpack_public_path__ + \"static/media/name.15f912fa.mp3\";","import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport VolumeLogo from \"./assets/reduced-volume.svg\";\nimport BodyText from \"./BodyText\";\nimport name from \"./assets/name.mp3\";\n\nfunction App() {\n  let audio = new Audio(name);\n  useEffect(() => {\n    audio.load();\n  });\n  const start = () => {\n    audio.play();\n    console.log(audio);\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"header-text header-margin\">Hello</div>\n      <div className=\"header-text\">\n        My name is Yihong Liu\n        <button className=\"volume-button\" onClick={start}>\n          <img src={VolumeLogo} className=\"volume-logo\"></img>\n        </button>\n      </div>\n      <BodyText>\n        3rd year Computer Engineering student @ UW. Interested in game\n        development and capital markets.\n      </BodyText>\n      <BodyText>Here's where I've worked:</BodyText>\n      <ul>\n        <li>PointClickCare - Software Engineering Co-op</li>\n        <li>TD Securities, Structured Notes - Summer Associate</li>\n        <li>University of Waterloo - Undergraduate TA</li>\n        <li>Axsium Group - Solutions Developer Co-op</li>\n      </ul>\n      <BodyText>\n        I like to tinker a lot, but have a tendency to never finish my side\n        projects...\n      </BodyText>\n      <BodyText>Here are some of my more complete projects:</BodyText>\n      <ul>\n        <li>\n          <a\n            href=\"https://github.com/MustafaMuhammad2000/Ai-Lofi\"\n            target=\"_blank\"\n          >\n            Ai-Lofi\n          </a>\n          : architected model in Keras to produce new MIDIs. We eventually ran\n          out of GCP credits, but the model is kind of ok [Python, GCP]\n        </li>\n        <li>\n          <a href=\"\" target=\"_blank\">\n            EvoSim\n          </a>\n          : Used genetic algorithms and MLPs (glorified matrix multiplication)\n          to simulate evolution [C++, SFML]\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}